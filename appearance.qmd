---
title: "見た目を整える"
---

## テーマ

Quartoでは[テーマ](https://quarto.org/docs/output-formats/html-themes.html)を変更することができます。[Bootswatch](https://bootswatch.com/)から気になるテーマを選択して、`_quarto.yml`に反映させましょう。

```yaml
format:
  html:
    ...
    theme: ...
    ...
```

ナビゲーションバーの色を変更したい場合は`_quarto.yml`を次のように書き換えます。

```yaml
website:
  ...
  navbar:
    background: primary
  ...
```

## フォント

また、[フォント](https://quarto.org/docs/output-formats/html-basics.html#table-of-contents)も変更できます。フォントを適切に設定しないと、厄介なことをが起こるときがあります。

きれいなウェブサイトを作ることが主眼ではないので、"font-family おすすめ"で出てくるウェブサイトで適当なものをコピペしてしまいましょう（例えば、[こちら](https://ics.media/entry/200317/)）。

`_quarto.yml`を変更します。

```yaml
format:
  html:
    ...
    mainfont: "Helvetica Neue", Arial, "Hiragino Kaku Gothic ProN" "Hiragino Sans", "BIZ UDPGothic", Meiryo, sans-serif
    ...
```

- `fontsize`でフォントの大きさも変えられます。

また、ウェブサイトの言語を指定しないと適切なフォントが使用されない可能性があるので、[`lang`属性](https://quarto.org/docs/authoring/language.html)を設定しておくとよいでしょう。

- 例えば、日本語表示をする場合は`_quarto.yml`の末尾に次のように追記します。

```yaml
lang: ja
```

### ウェブフォントの利用 (optional)

どのようなデバイスでも同じフォントで表示したい！という場合はウェブフォントを使うのが一つの選択肢です。例えば、[Noto Sans Japanese](https://fonts.google.com/noto/specimen/Noto+Sans+JP)を使おうとします。

1. `font.html`というファイルを作り、次のように記述します。

```html
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400&display=swap" rel="stylesheet">
```

2. `_quarto.yml`の`html:`の配下に次のように記述します。

```yaml
format:
  html:
    ...
    include-in-header: font.html # <1>
    mainfont: Noto Sans JP, Helvetica Neue, Arial, Hiragino Kaku Gothic ProN, Hiragino Sans, BIZ UDPGothic, Meiryo, sans-serif # <2>
    ...
```

1. `font.html`の読み込み
2. フォントの追加

## レイアウト (optional)

### 幅の調整

文字などを表示する幅を広げたい場合は[レイアウト](https://quarto.org/docs/authoring/article-layout.html)を変更します。

### グリッド

複数の要素を横に並べたい場合は[グリッド](https://quarto.org/docs/output-formats/page-layout.html#css-grid)を指定します。

- Quartoは[Bootstrap](https://getbootstrap.jp/)というフレームワークを使用しているため、その[グリッド・システム](https://getbootstrap.jp/docs/5.0/layout/grid/)を活用します。

```md
::: {.grid}

::: {.g-col-4}
This column takes 1/3 of the page
:::

::: {.g-col-8}
This column takes 2/3 of the page
:::

:::
```

::: {.grid}

::: {.g-col-4}
This column takes 1/3 of the page
:::

::: {.g-col-8}
This column takes 2/3 of the page
:::

:::

ポイントは合計して12になるようにそれぞれの要素の幅を指定します。

- 上記の例では左側の幅が4なので、4/12=1/3となります。同様に、右は2/3になります。

### 余白

右の[余白](https://quarto.org/docs/authoring/article-layout.html#margin-content)にコンテンツを表示させることができます。

## 色

### ナビゲーションバー

[ナビゲーションバー](https://quarto.org/docs/websites/website-navigation.html#top-navigation)の色を変える場合は、`_quarto.yml`の`navbar:`の設定を変えます。

- `background`：背景
- `foreground`：文字などの色

色はテーマで設定されている色（“primary”, “secondary”, “success”, “danger”, “warning”, “info”, “light”, “dark”）やHEXカラーで設定できます。

### フォントや背景 (optional)

[フォントや背景の色](https://quarto.org/docs/authoring/article-layout.html#margin-content)も変更できます。

- `fontcolor`
- `linkcolor`
- `backgroundcolor`

ただし、ナビゲーションバーと異なり、テーマで設定されている色は使えません。

### カスタムCSS (optional)

`linkcolor`を変更してもマウスをホバーしたときの色は変更されないので、[カスタムCSS](https://quarto.org/docs/output-formats/html-themes.html#theme-options)で上書きする方がよいと思います。

まず、`custom.scss`（`.css`ではない）を作成します。そして、その中で次のように記入します。

```css
/*-- scss:defaults --*/
$primary: ...;
```

ここで、メインで使いたい色をHEXカラーで指定します。

- 色は[このようなサイト](https://www.colordic.org/)から選んだり、スクールカラーを使ったり、気に入ったカラーパレットから使ったりすればよいでしょう。

他に個別に色を指定したい要素がある場合は適当な[Sass変数](https://www.colordic.org/)を上書きします。

## アクセシビリティ

### レスポンシブ・デザイン

ディスプレイのサイズに合わせてレイアウトを変更することを**レスポンシブ・デザイン**と呼びます。QuartoではBootstrapのレスポンシブ・デザインを使っています。これにより、PCでもスマホでも適切に表示されます。

- Firefoxでは`More tools`の`Responsive Design Mode`で見え方を選択します。
- ChromeやEdgeでは`More tools`の`Developer Tools`を開き、左上のボタンで見え方を選択します。

### カラー・ユニバーサル・デザイン

ウェブサイトやスライドは自分が見えているように他者にも見えているとは限りません。

- [カラー・ユニバーサル・デザイン](https://cudo.jp/)を意識しましょう。

他の人にはどのように見えるのかを確認しましょう。

- Firefoxでは`More tools`の`Web Developer Tools`を開き、`Accessibility`の`Simulate`で見え方を選択します。
- ChromeやEdgeでは`More tools`の`Developer Tools`を開き、`Rendering`の`Emulate vision deficiencies`で見え方を選択します。
