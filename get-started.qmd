---
title: "セットアップ"
---

まずは、使用するツールのセットアップをしつつ、ウェブサイトの作成から公開までの一連の流れを把握します。

## ウェブサイト公開の準備

ウェブサイトを公開する準備から始めたいと思います。今回は[GitHub Pages](https://docs.github.com/ja/pages)というサービスを使って、無料で公開します。

### Visual Studio Code

ウェブサイトを作成するために使用するVisual Studio Code (VS code) を[インストール](https://code.visualstudio.com/)します。

- 普段、RStudioを使用している人はそちらを使っても構いません。

:::{.callout-note collapse="true"}

## 初期設定の変更

左下の設定ボタンをクリックし、`Themes`から好みのテーマを選んでください。

`Settings`を適当に変更します。

- `Editor: Word Wrap`を`on`にします。
- `Editor: Font Size`を見やすい大きさにします。

:::

### Git

GitHubでウェブサイトを公開するために、OSに合わせて[Git](https://git-scm.com/)をインストールします。

- インストール方法はいろいろあるようなので、調べてください。
- VS codeをデフォルトに設定しておきましょう。
- ユーザーネームとメールアドレスの登録まで行ってください。

```bash
git config --global user.name "ユーザー名"
git config --global user.email "メールアドレス"
```

### GitHub

[GitHub](https://github.com/)でアカウントを作成します。**アカウント名はウェブサイトのURLになるので、それを念頭に置いて決めてください。**

GitHubのリポジトリを作成します。GitHub Pagesでウェブサイトを公開するためには、`<username>.github.io`という名前のリポジトリを作成する必要があります。

- 例えば、GitHubアカウント名が`shohe-doi`であれば、`shohei-doi.github.io`というリポジトリ名にします。また、URLは`https://shohei-doi.github.io/`となります。

### VS codeとGitHubの連携

<!-- 左のExtentions（4つの正方形のボタン）を押して、`GitHub Pull Requests and Issues`をインストールします。 -->

`Source Control`（二股に分かれているひもみたいなボタン）から`Clone Repository`をクリックします。

`Clone from GitHub`をクリックし、GitHubと連携し、先ほど作成したリポジトリを選択します。

{{< kbd Enter >}}を押して、ウェブサイト用のフォルダを保存したいフォルダを選択します。

- 例えば、`Document`というフォルダを選択すると、その中に`<username>.github.io`というフォルダが作成されます。

### Quarto

自分のOSに合ったQuartoを[インストール](https://quarto.org/docs/get-started/)します。

また、VS CodeのExtentionsを押して、拡張機能としての`Quarto`をインストールします。

[ウェブサイトの雛形](https://quarto.org/docs/websites/)を作成します。

- {{< kbd Ctrl-Shift-P >}}を押して、`quarto`と入力します。
- `Create Project`を選択します。
- `Website Project`を選択します。
- 作成したフォルダ`<username>.github.io`を選択します。
- `/`を入力して{{< kbd Enter >}}を押します。

うまくいっていると、`index.qmd`をはじめとするファイルが作成されています。

`_quarto.yml`というファイルを開きます。

- このyamlファイルはウェブサイト全体の設定を記述するものです。

```yaml
project:
  type: website
  output-dir: docs # <1>
```

1. この行を追記します。後にGitHubで公開する際のおまじないです。

:::{.callout-important}
## yamlの注意点

`_quarto.yml`や後述するyamlヘッダーでは、インデントとコロンのあとのスペースが重要です。これらを間違えると上手く動かないので気をつけてください。
:::

## ウェブサイトの作成

`about.qmd`と`styles.css`というファイルを削除します。また、`_quarto.yml`からも削除します。

```yaml
website:
  title: "..."
  navbar:
    left:
      - index.qmd
      - about.qmd # <1>
```

1. これを削除する。

`index.qmd`ファイルを開き、右上の[`Render`](https://quarto.org/docs/tools/vscode.html)というボタンをクリックします。

- `index.qmd`は一番最初に表示されるウェブサイトです。

$\leadsto$うまく行けば、右側に生成されたウェブサイトが表示されます。

### Google Analytics (optional)

[Google Analytics](https://marketingplatform.google.com/intl/ja/about/analytics/)とはウェブサイトへのアクセスなどを解析するサービスです。

- Google Analyticsのアカウントを作成します。
- プロパティを作成します。
  - 設定は適当で構いません。
- プラットフォームでウェブを選択します。
  - URLは`https://<username>.github.io`に、ストリーム名は適当に決めます。
- 測定IDをコピーし、`_quarto.yml`を開きます。

```yaml
website:
  title: "..."
  google-analytics: "G-..." # <1>
```

1. [この行を追記します。](https://quarto.org/docs/websites/website-tools.html#google-analytics)

そのうち、測定が開始されます。

- researchmapも測定できます。

## ウェブサイトの公開

以降、ファイルを修正するたびに`Source Control`をクリックして、次の作業を行います。

- `Changes`の横の`+`ボタンをクリックして、変更を"add"します。
- 上部の`Message`に変更内容を簡単に記載し（半角英数字）、`Commit`をクリックします。

$\leadsto$これにより、変更内容がリポジトリに記録されます。

ウェブサイトを公開する場合は、`push`を行います（次回から`Sync Changes`というボタンでも可能）。

- 初回はGitHubとの連携の許可を求められるかもしれません。

最後に、GitHubでリポジトリのページに飛び、`Settings`の`Pages`で`Branch`をmasterのdocsに設定します。

少し、時間が経つと`Your site is live at...`と表示されますので、公開されたウェブサイトにアクセスします。

- 最初の一回だけでOK。
- `https://<username>.github.io`でもアクセスできることを確認しましょう。

### 次回以降の手順

今後は、VS Codeで

1. `.qmd`ファイルを編集
1. `Reload`で変更を確認
1. `Render`で`.qmd`ファイルからウェブサイトを作成
1. `add & commit`で変更を保存
1. `push`で公開

という手順になります。
